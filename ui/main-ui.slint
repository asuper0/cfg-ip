import { LineEdit , Button, CheckBox, VerticalBox, HorizontalBox, ListView, StandardListView, GridBox} from "std-widgets.slint";
import { IpV4, NetAddress, NetInterfaceItem, InterfaceUiItem, InterfaceItemCheck, InterfaceEdit, NetItemUtils } from "interface-item.slint";

export { InterfaceItemCheck, NetItemUtils }

export global NetInterfaceStatus {
    in-out property <[NetInterfaceItem]> interface-infos; 
    in-out property <[StandardListViewItem]> interface-names;
    in-out property <int> selected-index;
    in-out property <[NetInterfaceItem]> saved-settings; 
    in-out property <[StandardListViewItem]> saved-names;
}

export component Main inherits Window {
    preferred-width: 1280px;
    preferred-height: 720px;

    callback set-static(string, NetInterfaceItem);
    callback set-dynamic(string);
    callback refresh-adapters();
    callback load-selected(NetInterfaceItem);
    callback apply-config(NetInterfaceItem);

    HorizontalBox {
        VerticalBox {
            Text {text: "Edit interface"; max-height: 20px;}
            HorizontalBox {
                Button {text: "Load selected"; clicked => { curr.select-item(show-setting.value); }}
                Button {text: "Apply"; clicked => {}}
                Button {text: "Save"; clicked => {}}
            }

            curr := InterfaceEdit { }
        }

        HorizontalBox {
            max-width: parent.width * 0.6;
            GridBox {
                Row {
                    Text {text: "Adapters"; max-height: 20px; vertical-alignment: center;}
                    Button {text: "Refresh"; clicked => { root.refresh-adapters(); }}
                    Text {text: "Selected Item"; vertical-alignment: center;}
                    le-selected-item := LineEdit { read-only: true; }
                }
                Row {
                    StandardListView { 
                        colspan: 2;
                        model: NetInterfaceStatus.interface-names;
                        current-item-changed(index) => {
                            if (index>=0 && index < NetInterfaceStatus.interface-infos.length) {
                                show-setting.value = NetInterfaceStatus.interface-infos[index];
                                le-selected-item.text = "Adapter : " + show-setting.value.name;
                            }
                        }
                    }
                }
                Row {
                    Text {text: "Saved settings"; max-height: 20px; vertical-alignment: center;}
                    Button {text: "Remove"; clicked => { }}
                }
                Row {
                    StandardListView { 
                        colspan: 2;
                        model: NetInterfaceStatus.saved-names;
                        current-item-changed(index) => {
                            if (index>=0 && index < NetInterfaceStatus.saved-settings.length) {
                                show-setting.value = NetInterfaceStatus.saved-settings[index];
                                le-selected-item.text = "Saved : " + show-setting.value.name;
                            }
                        }
                    }
                }

                show-setting := InterfaceUiItem { 
                    row: 1;
                    col: 2;
                    rowspan: 4;
                    colspan: 2;
                    read-only: true;
                }
            }
        }
    }

    
}
